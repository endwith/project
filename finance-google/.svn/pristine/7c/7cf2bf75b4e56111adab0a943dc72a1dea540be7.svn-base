<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptteng.dao.TradeMapper" >
  <resultMap id="BaseResultMap" type="com.ptteng.model.Trade" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="investment_contract_id" property="tradeId" jdbcType="BIGINT" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="purchaser" property="purchaser" jdbcType="VARCHAR" />
    <result column="buy_time" property="buyTime" jdbcType="BIGINT" />
    <result column="delay_time" property="delayTime" jdbcType="BIGINT" />
    <result column="expire_time" property="expireTime" jdbcType="BIGINT" />
    <result column="to_be_matched" property="toBeMatched" jdbcType="DECIMAL" />
    <result column="purchase_amount" property="purchaseAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="expected_rate" property="expectedRate" jdbcType="DECIMAL" />
  </resultMap>

  <!-- 定义resultMap，type为HashMap -->
  <resultMap id="PartTradeMap" type="java.util.HashMap">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="to_be_matched" property="toBeMatched" jdbcType="DECIMAL" />
    <result column="trade_id" property="tradeId" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, investment_contract_id, product, purchaser, buy_time, delay_time, expire_time, to_be_matched,
    purchase_amount, status, user_id, expected_rate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from trade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from trade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ptteng.model.Trade" >
    insert into trade (id, investment_contract_id, product,
      purchaser, buy_time, delay_time, 
      expire_time, to_be_matched, purchase_amount, 
      status, user_id,
      expected_rate)
    values (#{id,jdbcType=BIGINT}, #{investmentContractId,jdbcType=BIGINT}, #{product,jdbcType=VARCHAR},
      #{purchaser,jdbcType=VARCHAR}, #{buyTime,jdbcType=BIGINT}, #{delayTime,jdbcType=BIGINT}, 
      #{expireTime,jdbcType=BIGINT}, #{toBeMatched,jdbcType=DECIMAL}, #{purchaseAmount,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT},
      #{expectedRate,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ptteng.model.Trade" >
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="investmentContractId != null" >
        investment_contract_id,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="purchaser != null" >
        purchaser,
      </if>
      <if test="buyTime != null" >
        buy_time,
      </if>
      <if test="delayTime != null" >
        delay_time,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="toBeMatched != null" >
        to_be_matched,
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="expectedRate != null" >
        expected_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="investmentContractId != null" >
        #{investmentContractId,jdbcType=BIGINT},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="purchaser != null" >
        #{purchaser,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=BIGINT},
      </if>
      <if test="delayTime != null" >
        #{delayTime,jdbcType=BIGINT},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=BIGINT},
      </if>
      <if test="toBeMatched != null" >
        #{toBeMatched,jdbcType=DECIMAL},
      </if>
      <if test="purchaseAmount != null" >
        #{purchaseAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="expectedRate != null" >
        #{expectedRate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptteng.model.Trade" >
    update trade
    <set >
      <if test="investmentContractId != null" >
        investment_contract_id = #{investmentContractId,jdbcType=BIGINT},
      </if>
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="purchaser != null" >
        purchaser = #{purchaser,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null" >
        buy_time = #{buyTime,jdbcType=BIGINT},
      </if>
      <if test="delayTime != null" >
        delay_time = #{delayTime,jdbcType=BIGINT},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=BIGINT},
      </if>
      <if test="toBeMatched != null" >
        to_be_matched = #{toBeMatched,jdbcType=DECIMAL},
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount = #{purchaseAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="expectedRate != null" >
        expected_rate = #{expectedRate,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptteng.model.Trade" >
    update trade
    set investment_contract_id = #{investmentContractId,jdbcType=BIGINT},
      product = #{product,jdbcType=VARCHAR},
      purchaser = #{purchaser,jdbcType=VARCHAR},
      buy_time = #{buyTime,jdbcType=BIGINT},
      delay_time = #{delayTime,jdbcType=BIGINT},
      expire_time = #{expireTime,jdbcType=BIGINT},
      to_be_matched = #{toBeMatched,jdbcType=DECIMAL},
      purchase_amount = #{purchaseAmount,jdbcType=DECIMAL},
      investment_contract = #{investmentContract,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      expected_rate = #{expectedRate,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="matchSelect" resultMap="PartTradeMap" parameterType="Long">
     select investment_contract_id,to_be_matched from trade where delay_time &lt;= (select loan_term from obligatory_right where id=#{id})
    and expire_time &lt;= (select repay_time from obligatory_right where id=#{id})
    and to_be_matched &gt; 0 and to_be_matched &lt;=(select matching_amount from obligatory_right where id=#{id})
    and investment_contract_id not in (select trade_id from matchs where obl_id=#{id})
    order by delay_time desc ,expire_time desc,to_be_matched desc
    limit #{a},#{b}
  </select>
  <select id="limitMatchSelect" resultMap="PartTradeMap" parameterType="Long">
    select investment_contract_id,to_be_matched from trade where delay_time &lt;= {loanTerm}
    and expire_time &lt;={repayTime}
    and to_be_matched &gt; 0
    and to_be_matched &lt;={matchingAmount}
    and investment_contract_id not in (select trade_id from matchs where obl_id=#{id})
    order by delay_time desc ,expire_time desc,to_be_matched desc
    limit 0,3
  </select>

  <update id="updateByTradeId">
  update trade set to_be_matched = #{toBeMatched}
  where investment_contract_id=#{investmentContractId}
</update>
  <select id="selectByUserId" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from trade
    where user_id = #{userId,jdbcType=BIGINT}
    and status  BETWEEN #{a} and #{b}
  </select>
  <update id="updateStatusByID">
  update trade set status = #{status}
  where id=#{id}
</update>
</mapper>