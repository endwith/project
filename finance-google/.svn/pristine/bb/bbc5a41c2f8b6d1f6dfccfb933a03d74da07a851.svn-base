package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.model.Product;
import com.ptteng.service.impl.ProductServiceHystric;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.math.BigDecimal;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-admin",fallback=ProductServiceHystric.class)
public interface ProductService {
    /**
     *63产品管理入口
     */
    @RequestMapping(value ="/a/u/allproduct", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getAllProduct(@RequestParam("page")Long page, @RequestParam("size")Long size);
    /**
     *64产品模糊查询
     */
    @RequestMapping(value ="/a/u/products", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getProducts(@RequestParam("page")Long page,@RequestParam("size")Long size,@RequestParam("id")Long id,
                            @RequestParam("productName")String productName,@RequestParam("founder")String founder,
                            @RequestParam("status")Integer status);
    /**
     *65产品新增
     */
    @RequestMapping(value ="/a/u/product", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject addProduct(@RequestBody HttpServletRequest request, @RequestParam("productName")String productName, @RequestParam("expectedRate")BigDecimal expectedRate,
                           @RequestParam("investmentCycle")Integer investmentCycle, @RequestParam("originMoney")BigDecimal originMoney, @RequestParam("addMoney")BigDecimal addMoney, @RequestParam("returnInterest")Integer returnInterest,
                           @RequestParam("introduce")String introduce, @RequestParam("moreInformation")String moreInformation, @RequestBody Product product);
    /**
     *66产品编辑—获取该产品信息
     */
    @RequestMapping(value ="/a/u/product/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getProduct(@RequestParam("id")Long id);
    /**
     *67产品编辑—更新该产品
     *68产品上下架
     */
    @RequestMapping(value ="/a/u/product/{id}", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject updateProduct(@RequestBody HttpServletRequest request, @RequestParam("id")Long id, @RequestParam("productName")String productName, @RequestParam("expectedRate")BigDecimal expectedRate, @RequestParam("investmenCycle")Integer investmenCycle,
                              @RequestParam("originMoney")BigDecimal originMoney, @RequestParam("addMoney")BigDecimal addMoney, @RequestParam("returnInterest")Integer returnInterest,
                              @RequestParam("introduce")String introduce, @RequestParam("moreInformation")String moreInformation, @RequestParam("status")Integer status, @RequestBody Product product);
    /**
     *69产品删除
     */
    @RequestMapping(value ="/a/u/product/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
     JSONObject deleteProduct(@RequestParam("id")Long id);

}
