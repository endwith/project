package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.service.impl.UserMessageServiceHystric;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-server-client",fallback=UserMessageServiceHystric.class)
public interface UserMessageService {
    /**
     *16显示个人信息
     */
    @RequestMapping(value ="/client/a/u/own-messages", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getMessages();
    /**
     *17实名验证
     */
    @RequestMapping(value ="/client/a/u/real-name", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject realName();
    /**
     *18绑卡
     */
    @RequestMapping(value ="/client/a/u/tieing-bank-card", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject bingBankCard();
    /**
     *19实名验证（点击下一步）
     */
    @RequestMapping(value ="/client/a/u/true-name", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject trueName();
    /**
     *20需要短信验证（更换手机时）
     */
    @RequestMapping(value ="/client/a/u/sms-code", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject smsCode();
    /**
     *21发送验证码（这个是不用输入手机号码的）
     */
    @RequestMapping(value ="/client/a/u/verification-code", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject verificationCode();
    /**
     *22验证码检验（下一步）
     */
    @RequestMapping(value ="/client/a/u/checked-code", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject checkedCode();

    /**
     *23更换手机
     */
    @RequestMapping(value ="/client/a/u/new-phone-number", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject newPhone();
    /**
     *24修改密码
     */
    @RequestMapping(value ="/client/a/u/new-password", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject newPassword();
    /**
     *26消息中心
     */
    @RequestMapping(value ="/client/a/u/information-center", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject informationCenter();
    /**
     *27消息阅读
     */
    @RequestMapping(value ="/client/a/u/information", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject information();


}

