package com.ptteng.controller;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.model.ModuleManage;
import com.ptteng.service.ModuleManageService;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.*;

@RefreshScope
@RestController
public class ModuleManageController {
    org.slf4j.Logger logger = LoggerFactory.getLogger(ModuleManageController.class);
    @Autowired
    private ModuleManageService moduleManageService;
    @Autowired
    private JSONObject jsonObject;
    @Autowired
    HttpServletRequest request;
    @Autowired
    HttpServletResponse response;
    /**
     *106模块管理查询模块
     */
    @RequestMapping(value ="/a/u/all-module", produces="application/json",method = RequestMethod.GET)
    public JSONObject getAllModule(Long page,Long size){
        logger.info("/a/u/all-module---GET---the request parameters are page:{},size:{}",page,size);
        List<ModuleManage> modules;
        try {
            if (page != null) {
                modules = moduleManageService.forSelect((page - 1) * size, size);
            } else {
                modules = moduleManageService.forSelect(0L, size);
            }
            logger.info(modules.toString());
            jsonObject.put("code", 1000);
            jsonObject.put("data", modules);
        } catch (Exception e){
            logger.info("错误",e);
            jsonObject.put("code",2001);
        }
        return jsonObject;
    }
    /**
     *107模块模糊查询查询
     */
    @RequestMapping(value ="/a/u/modules", produces="application/json",method = RequestMethod.GET)
    public JSONObject getModules(Long id,String moduleName,Long parentModule
    ,String founder,Long page,Long size){
        logger.info("/a/u/modules---GET---the request parameters a" +
                        "re id:{},moduleName:{},parentModule:{},founder:{},page:{},size:{}",
                id,moduleName,parentModule,founder,page,size);
        List<ModuleManage> modules;
        try {
            if (page != null) {
                modules = moduleManageService.select((page - 1) * size, size, id, moduleName, parentModule, founder);
            } else {
                modules = moduleManageService.select(0L, size, id, moduleName, parentModule, founder);
            }
            logger.info(modules.toString());
            jsonObject.put("code", 1000);
            jsonObject.put("data", modules);
        }  catch (Exception e){
            logger.info("错误",e);
            jsonObject.put("code",2001);
        }
        return jsonObject;
    }
    /**
     *108模块查找（实际上是编辑按钮）
     */
    @RequestMapping(value ="/a/u/module/{id}", produces="application/json",method = RequestMethod.GET)
    public JSONObject getModuleById(Long id){
        logger.info("/a/u/module/{id}---GET---the request parameters a" +
                        "re id:{}",id);
        try {

            ModuleManage module = moduleManageService.selectByPrimaryKey(id);
            Map map = new HashMap();
            map.put("id", module.getId());
            map.put("moduleName", module.getModuleName());
            map.put("moduleUrl", module.getModuleUrl());
            map.put("parentModule", module.getParentId());
            map.put("type", module.getType());
            logger.info(module.toString());
            jsonObject.put("code", 1000);
            jsonObject.put("data",map);
        }
        catch (Exception e){
                logger.info("错误",e);
                jsonObject.put("code",2001);
            }
        return jsonObject;
    }
    /**
     *109模块删除
     */
    @RequestMapping(value ="/a/u/module/{id}", produces="application/json",method = RequestMethod.DELETE)
    public JSONObject deleteModule(Long id){
        logger.info("/a/u/module/{id}---DELETE---the request parameters a" +
                "re id:{}",id);
        try {
            moduleManageService.deleteByPrimaryKey(id);
            jsonObject.put("code", 1000);
        } catch (Exception e){
            logger.info("错误",e);
            jsonObject.put("code",2001);
        }
        jsonObject.put("data","");
        return jsonObject;
    }
    /**
     *110模块更改（编辑好角色后点击保存）
     */
    @RequestMapping(value ="/a/u/module", produces="application/json",method = RequestMethod.PUT)
    public JSONObject updateModule(Long id,String moduleName,String moduleUrl
            ,Long parentModule,String type){
        logger.info("/a/u/module---PUT---the request parameters a" +
                        "re id:{},moduleName:{},moduleUrl {},parentModule:{},type:{}",
                id,moduleName,moduleUrl,parentModule,type);
        try {
            ModuleManage module = new ModuleManage();
            module.setId(id);
            module.setModuleName(moduleName);
            module.setModuleUrl(moduleUrl);
            module.setParentId(parentModule);
            module.setType(type);
            moduleManageService.updateByPrimaryKeySelective(module);
            jsonObject.put("code", 1000);
        }catch (Exception e){
            logger.info("错误",e);
            jsonObject.put("code",2001);
        }
        jsonObject.put("data","");

        return jsonObject;
    }

}
