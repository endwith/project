package com.ptteng.controller;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.model.BackstageAccount;
import com.ptteng.model.InformationManage;
import com.ptteng.service.BackstageAccountService;
import com.ptteng.service.InformationManageService;
import com.ptteng.service.MessageRelationshipService;
import com.ptteng.util.OOSUtil;
import com.ptteng.util.Token;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


@RefreshScope
@RestController
public class InformationController {
    org.slf4j.Logger logger = LoggerFactory.getLogger(InformationController.class);
    @Autowired
    private JSONObject jsonObject;
    @Resource
    private InformationManageService informationManageService;
    @Resource
    private MessageRelationshipService messageRelationshipService;
    @Resource
    private OOSUtil oosUtil;
    @Autowired
    private Token token;
    @Resource
    BackstageAccountService backstageAccountService;
    @Autowired
    HttpServletRequest request;
    @Autowired
    HttpServletResponse response;
    /**
     *84消息管理入口
     */
    @RequestMapping(value ="/a/u/all-information", produces="application/json",method = RequestMethod.GET)
    public JSONObject getAllInformation(Long page,Long size){
        logger.info("/a/u/all-information---GET---the request parameters are page:{},size:{},type:{}",page,size);
        List<InformationManage> informationManages;
        Long total;
        Map<String,Object> map=new HashMap<>();
        try{
        if(page!=null){
            informationManages =informationManageService.forSelect((page-1)*size, size);
        }else {
            informationManages=informationManageService.forSelect(0L,size);
        }
         total=informationManageService.selectCount();
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
//        logger.info(informationManages.toString());
        map.put("total",total);
        map.put("informationManages",informationManages);
        jsonObject.put("code",1000);
        jsonObject.put("data",map);
        return jsonObject;
    }
    /**
     *85消息管理查询
     */
    @RequestMapping(value ="/a/u/information", produces="application/json",method = RequestMethod.GET)
    public JSONObject getInformation(Long page,Long size,String inforTitle,Integer inforStatus,String founder,Long sendBeginTime,Long sendEndTime){
        logger.info("/a/u/information---GET---the request parameters are size:{},page:{},inforTitle:{},inforStatus:{},founder:{},sendBeginTime:{},sendEndTime:{}",size,page,inforTitle,inforStatus,founder,sendBeginTime,sendEndTime);
        List<InformationManage> informationManages;
        Map<String,Object> map=new HashMap<>();
        Long total;
        try{
        if(page!=null){
            informationManages=informationManageService.select((page-1)*size, size,inforTitle,inforStatus,founder,sendBeginTime,sendEndTime);
        }else {
            informationManages=informationManageService.select(0L,size,inforTitle,inforStatus,founder,sendBeginTime,sendEndTime);
        }
        total=informationManageService.selectCountWithCondition(inforTitle,inforStatus,founder,sendBeginTime,sendEndTime);
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
//        logger.info(informationManages.toString());
        map.put("total",total);
        map.put("informationManages",informationManages);
        jsonObject.put("code",1000);
        jsonObject.put("data",map);
        return jsonObject;
    }
    /**
     *86消息管理新增
     */
    @RequestMapping(value ="/a/u/information", produces="application/json",method = RequestMethod.POST)
    public JSONObject addInformation(String inforTitle, MultipartFile inforPicture, String inforContent, Long sendTime, Integer inforStatus) throws IOException {
//        logger.info("/a/u/information---POST---the request parameters are inforTitle:{},inforContent:{},sendTime:{},inforStatus:{}",inforTitle,inforContent,sendTime,inforStatus);
        InformationManage informationManage=new InformationManage();
        //sendTime和inforStatus不能同时为空
        if(null==sendTime&&null==inforStatus){
            jsonObject.put("code",1002);
            jsonObject.put("data","");
            return jsonObject;
        }
        if(null==inforStatus){
            informationManage.setInforStatus(0);
        }
        informationManage.setInforTitle(inforTitle);
        informationManage.setInforTitle(inforContent);
        informationManage.setSendTime(sendTime);
        informationManage.setInforStatus(inforStatus);
        String fileName=null;
        String thisId = null;
        Cookie[] cookie = request.getCookies();
        if (cookie != null) {
            for (Cookie c : cookie) {  // 遍历Cookie
                if("userId".equals(c.getName()))
                    thisId=c.getValue();
            }
        }
        Long id=Long.valueOf(token.SolveToken(thisId));
        int s;
        try {
            BackstageAccount backstageAccount = backstageAccountService.selectByPrimaryKey(id);
            //新建人
            informationManage.setFounder(backstageAccount.getAdmin());
            if (null != inforPicture) {
                InputStream inputStream = inforPicture.getInputStream();
                //判断域名所属，对应存储那个云
                if (oosUtil.getEndpoint().equals("oss-cn-shenzhen.aliyuncs.com")) {
                    fileName = oosUtil.uploadOSS(inputStream);
                } else {
                    fileName = oosUtil.qiniu(inputStream);
                }
            }
            logger.info("add informationManage : " + informationManage.toString());
            //把图片的名字作为picture字段储存
            informationManage.setInforPicture("https://endwith.oss-cn-shenzhen.aliyuncs.com/"+fileName);
            Long start = System.currentTimeMillis();
            logger.info(informationManage.toString());
            //设置创建时间
            informationManage.setCreateAt(start);
            logger.info("***********" + informationManage.toString());
             s = informationManageService.insert(informationManage);
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
        if(s>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }
    /**
     *87消息管理编辑-获取
     *90消息管理查看详情
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.GET)
    public JSONObject getInformationById(Long id){
        logger.info("/a/u/information/{id}---GET---the request parameters are id:{}",id);
        InformationManage informationManage;
        try{
         informationManage=informationManageService.selectByPrimaryKey(id);
        String url="http://"+oosUtil.getBucketName()+"."+oosUtil.getEndpoint()+"/"+informationManage.getInforPicture();
        informationManage.setInforPicture(url);
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
        logger.info(informationManage.toString());
        jsonObject.put("code",1000);
        jsonObject.put("data",informationManage);
        return jsonObject;
    }
    /**
     *88消息管理编辑-更改
     *89消息管理取消推送
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.PUT)
    public JSONObject updateInformation(Long id,String inforTitle,MultipartFile inforPicture,String inforContent,Long sendTime,Integer inforStatus) throws IOException {
        logger.info("/a/u/information/{id}---PUT---the request parameters are id:{},inforTitle:{},inforContent:{},sendTime:{},inforStatus:{}",id,inforTitle,inforContent,sendTime,inforStatus);
        String fileName=null;
        String thisId = null;
        Cookie[] cookie = request.getCookies();
        if (cookie != null) {
            for (Cookie c : cookie) {  // 遍历Cookie
                if("userId".equals(c.getName()))
                    thisId=c.getValue();
            }
        }
        InformationManage informationManage=new InformationManage();
        informationManage.setId(id);
        informationManage.setInforTitle(inforTitle);
        informationManage.setInforContent(inforContent);
        informationManage.setSendTime(sendTime);
        informationManage.setInforStatus(inforStatus);
        Long UserId=Long.valueOf(token.SolveToken(thisId));
        int a;
        try{
            BackstageAccount backstageAccount = backstageAccountService.selectByPrimaryKey(UserId);
            //更新人
            informationManage.setModifier(backstageAccount.getAdmin());
        InputStream inputStream = inforPicture.getInputStream();
        //判断域名所属，对应存储那个云
        if(oosUtil.getEndpoint().equals("oss-cn-shenzhen.aliyuncs.com")){
            fileName =  oosUtil.uploadOSS(inputStream);
        } else {
            fileName=oosUtil.qiniu(inputStream);
        }
        //更新时间
        Long start=System.currentTimeMillis();
        informationManage.setUpdateAt(start);
        //修改该字段
        informationManage.setInforPicture(fileName);
         a=informationManageService.updateByPrimaryKeySelective(informationManage);
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
        if(a>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }
    /**
     *91消息管理删除
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.DELETE)
    public JSONObject deleteInformation(Long id){
        logger.info("/a/u/information/{id}---DELETE---the request parameters are id:{}", id);
        int a;
        int b;
        try{
         a=informationManageService.deleteByPrimaryKey(id);
         b=messageRelationshipService.deleteByInforId(id);
        }catch (Throwable e){
            logger.error("异常"+e);
            jsonObject.put("data","");
            jsonObject.put("code",2001);
            return jsonObject;
        }
        if(a>0&&b>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }


}
