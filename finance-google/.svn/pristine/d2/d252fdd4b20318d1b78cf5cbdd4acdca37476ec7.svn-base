package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.service.impl.SuggestionServiceHystric;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-server-client",fallback=SuggestionServiceHystric.class)
public interface SuggestionService {
    /**
     *92意见反馈入口
     */
    @RequestMapping(value ="/admin/a/u/all-suggestion", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getAllSuggestion();
    /**
     *93意见反馈查询
     */
    @RequestMapping(value ="/admin/a/u/suggestion", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getSuggestions();
    /**
     *94意见反馈查看详情
     *95意见反馈回复-获取
     */
    @RequestMapping(value ="/admin/a/u/suggestion/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getSuggestionById();
    /**
     *96意见反馈回复
     */
    @RequestMapping(value ="/admin/a/u/suggestion/{id}", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject updateSuggestion();
    /**
     *97意见反馈删除
     */
    @RequestMapping(value ="/admin/a/u/suggestion/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
     JSONObject deleteSuggestion();

}
