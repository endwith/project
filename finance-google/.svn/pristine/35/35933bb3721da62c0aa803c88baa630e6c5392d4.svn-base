package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.service.impl.InformationServiceHystric;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-admin",fallback=InformationServiceHystric.class)
public interface InformationService {
    /**
     *84消息管理入口
     */
    @RequestMapping(value ="/a/u/all-information", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getAllInformation();
    /**
     *85消息管理查询
     */
    @RequestMapping(value ="/a/u/information", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getInformation();
    /**
     *86消息管理新增
     */
    @RequestMapping(value ="/a/u/information", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject addInformation();
    /**
     *87消息管理编辑-获取
     *90消息管理查看详情
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getInformationById();
    /**
     *88消息管理编辑-更改
     *89消息管理取消推送
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject updateInformation();
    /**
     *91消息管理删除
     */
    @RequestMapping(value ="/a/u/information/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
     JSONObject deleteInformation();


}
