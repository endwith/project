package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.service.impl.RoleServiceHystric;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-server-client",fallback=RoleServiceHystric.class)
public interface RoleService {
    /**
     *111角色管理查询角色
     */
    @RequestMapping(value ="/admin/a/u/all-role", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getAllRole();
    /**
     *112角色模糊查询
     */
    @RequestMapping(value ="/admin/a/u/roles", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getRoles();
    /**
     *113角色查找（编辑）
     */
    @RequestMapping(value ="/admin/a/u/role/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getRoleById();
    /**
     *114角色删除
     */
    @RequestMapping(value ="/admin/a/u/role/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
     JSONObject deleteRole();
    /**
     *115角色更改（编辑好角色后点击保存）
     */
    @RequestMapping(value ="/admin/a/u/role", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject updateRole();

}
