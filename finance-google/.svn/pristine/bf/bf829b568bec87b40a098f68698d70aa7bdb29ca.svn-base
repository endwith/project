package com.ptteng.controller;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.model.Product;
import com.ptteng.service.ProductService;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import javax.annotation.Resource;
import java.math.BigDecimal;

import java.util.List;


@RefreshScope
@Controller
public class ProductController {
    org.slf4j.Logger logger = LoggerFactory.getLogger(ProductController.class);
    @Autowired
    private JSONObject jsonObject;
    @Resource
    private ProductService productService;
    /**
     *63产品管理入口
     */
    @RequestMapping(value ="/admin/a/u/allproduct", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    public JSONObject getAllProduct(Long page,Long size){
        logger.info("/admin/a/u/allproduct---GET---the request parameters are page:{},size:{}",page,size);
        List<Product> Products;
        if(page!=null){
            Products=productService.forSelect((page-1)*size, size);
        }else {
            Products=productService.forSelect(0L,size);
        }
        logger.info(Products.toString());
        jsonObject.put("code",1000);
        jsonObject.put("data",Products);
        return jsonObject;
    }
    /**
     *64产品模糊查询
     */
    @RequestMapping(value ="/admin/a/u/products", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    public JSONObject getProducts(Long page,Long size,Long id,String productName,String founder,int status){
        logger.info("/admin/a/u/products---GET---the request parameters are size:{},page:{},id:{},productName:{},founder:{},status:{}",size,page,productName,founder,id,status);
        List<Product> products;
        if(page!=null){
            products=productService.select((page-1)*size, size,id,productName,founder,status);
        }else {
            products=productService.select(0L,size,id,productName,founder,status);
        }
        logger.info(products.toString());
        jsonObject.put("code",1000);
        jsonObject.put("data",products);
        return jsonObject;
    }
    /**
     *65产品新增
     */
    @RequestMapping(value ="/admin/a/u/product", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
    public JSONObject addProduct(String productName,BigDecimal expectedRate,int investmentCycle,BigDecimal originMoney,BigDecimal addMoney,int returnInterest,String introduce,String moreInformation,Product product){
        logger.info("/admin/a/u/product---POST---the request parameters are productName:{},expectedRate:{},investmentCycle:{},originMoney:{},addMoney:{},returnInterest:{},introduce:{},moreInformation:{}", productName, expectedRate, investmentCycle, originMoney, addMoney, returnInterest, introduce, moreInformation);
        int s=productService.insert(product);
        logger.info(""+s);
        if(s>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }
    /**
     *66产品编辑—获取该产品信息
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    public JSONObject getProduct(Long id){
        logger.info("/admin/a/u/product/{id}---GET---the request parameters are id:{}", id);
        Product product=productService.selectByPrimaryKey(id);
        logger.info(product.toString());
        jsonObject.put("code",1000);
        jsonObject.put("data",product);
        return jsonObject;
    }
    /**
     *67产品编辑—更新该产品
     *68产品上下架
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
    public JSONObject updateProduct(Long id,String productName,BigDecimal expectedRate,int investmenCycle,BigDecimal originMoney,BigDecimal addMoney,int returnInterest,String introduce,String moreInformation,int status,Product product){
        logger.info("/admin/a/u/product/{id}---PUT---the request parameters are id:{}, productName:{}, expectedRate:{}, investmenCycle:{}, originMoney:{}, addMoney:{}, returnInterest:{}, introduce:{}, moreInformation:{}, status:{}",id,productName, expectedRate, investmenCycle, originMoney, addMoney, returnInterest, introduce, moreInformation, status);
        int a=productService.updateByPrimaryKeySelective(product);
        if(a>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }
    /**
     *69产品删除
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
    public JSONObject deleteProduct(Long id){
        logger.info("/admin/a/u/product/{id}---DELETE---the request parameters are id:{}", id);
        int a=productService.deleteByPrimaryKey(id);
        if(a>0)
            jsonObject.put("code",1000);
        else
            jsonObject.put("code",1001);
        jsonObject.put("data","");
        return jsonObject;
    }

}
