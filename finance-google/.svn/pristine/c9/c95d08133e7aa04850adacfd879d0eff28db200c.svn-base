package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.service.impl.ProductServiceHystric;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-server-client",fallback=ProductServiceHystric.class)
public interface ProductService {
    /**
     *63产品管理入口
     */
    @RequestMapping(value ="/admin/a/u/allproduct", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getAllProduct();
    /**
     *64产品模糊查询
     */
    @RequestMapping(value ="/admin/a/u/products", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getProducts();
    /**
     *65产品新增
     */
    @RequestMapping(value ="/admin/a/u/product", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject addProduct();
    /**
     *66产品编辑—获取该产品信息
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject getProduct();
    /**
     *67产品编辑—更新该产品
     *68产品上下架
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.PUT)
    @ResponseBody
     JSONObject updateProduct();
    /**
     *69产品删除
     */
    @RequestMapping(value ="/admin/a/u/product/{id}", produces="application/json",method = RequestMethod.DELETE)
    @ResponseBody
     JSONObject deleteProduct();

}
