package com.ptteng.service;

import com.alibaba.fastjson.JSONObject;
import com.ptteng.model.User;
import com.ptteng.service.impl.FinanceServiceHystric;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *提供一个java接口连接服务， 接口中的方法对应url接口就能直接访问了，不需要ribbon实例服务提供者
 */
//@FeignClient声明feign，添加fallback熔断器实现类
@FeignClient(value = "finance-client",fallback=FinanceServiceHystric.class)
public interface FinanceService {
    /**
     *8首页
     */
    @RequestMapping(value ="/a/u/main-page", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject mainPage();
    /**
     *9产品详情
     */
    @RequestMapping(value ="/a/product", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject product(String product,long id);
    /**
     *9 产品的投资记录
     */
    @RequestMapping(value ="/a/product/record", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject productRecord(String product,Long page,Long size);
    /**
     *10理财
     */
    @RequestMapping(value ="/a/u/finances", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject finances(long count,HttpServletRequest request);
    /**
     *11立即购买
     *14支付银行卡选择
     */
    @RequestMapping(value ="/a/u/buyer", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject buy(Long id,HttpServletRequest request);
    /**
     *12确认购买
     */
    @RequestMapping(value ="/a/u/confirming-payment", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject payment(HttpServletRequest request,Long money,String bankCard,Long id);
    /**
     *13支付方式选择
     */
    @RequestMapping(value ="/a/u/payment", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject choosePay(HttpServletRequest request);
    /**
     *15确认支付
     */
    @RequestMapping(value ="/a/u/real-payment", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject realPayment(HttpServletRequest request,Long id);
    /**
     *确认支付-回落后台接口
     */
    @RequestMapping(value ="/a/u/real-paymentReport", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject realPaymentReport(HttpServletRequest request,HttpServletResponse response);

    /**
     *28我的理财(显示已投资部分)
     *32显示已续投内容
     */
    @RequestMapping(value ="/a/u/finance", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject finance(HttpServletRequest request, HttpServletResponse response,Integer status);

    /**
     *29查看合同
     */
    @RequestMapping(value ="/a/u/contract", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject contract(Long tradeId);

    /**
     *30预约续投
     *31取消续投
     */
    @RequestMapping(value ="/a/u/reservation", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
     JSONObject reservation(Long id,Integer status);


    /**
     *33显示已退出的内容
     */
    @RequestMapping(value ="/a/u/quited-contract", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject quitedContract(HttpServletRequest request);

    /**
     *34交易记录
     */
    @RequestMapping(value ="/a/u/records", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject records(HttpServletRequest request);

    /**
     *35显示银行卡
     */
    @RequestMapping(value ="/a/u/bank-cards", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject bankCards(HttpServletRequest request);

    /**
     *36添加银行卡
     */
    @RequestMapping(value ="/a/u/bank-card", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject bankCard(HttpServletRequest request);

    /**
     *37填写银行卡信息
     */
    @RequestMapping(value ="/a/u/bank-message", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
     JSONObject bankMessage(HttpServletRequest request,String bankCard);

    /**
     *39银行卡绑卡
     *18绑卡
     */
    @RequestMapping(value ="/a/u/new-bank-card", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject newBankCard(HttpServletRequest request,String smsCode,String bank,String bankCard,String phone,User user);
    /**
     *40选择银行卡
     */
    @RequestMapping(value ="/a/u/one-bank", produces="application/json",method = RequestMethod.GET)
    @ResponseBody
    JSONObject oneBank(HttpServletRequest request,String  bankCard);

    /**
     *42解除绑定
     */
    @RequestMapping(value ="/a/u/unbinding-card", produces="application/json",method = RequestMethod.POST)
    @ResponseBody
    JSONObject unbingCard(String smsCode,HttpServletRequest request,String  bankCard);

}
