package com.ptteng.quartz;

import org.quartz.SchedulerException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.scheduling.quartz.SchedulerFactoryBean;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.Properties;

@Configuration
@EnableScheduling
@Component
public class SchedulerListener {

    @Autowired
    public SchedulerAllJob myScheduler;
//    fixedRate = 5000
    /**
     * 每一百秒查一次数据库
     */
    @Scheduled(fixedRate = 1000000)
    public void schedule() throws SchedulerException {
        myScheduler.scheduleJobs();
    }
    /**
     * 设置quartz属性
     *
     * @throws IOException
     */
    public static Properties quartzProperties() throws IOException {
        Properties prop = new Properties();
        prop.put("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool");//实例化threadPool时,使用的线程类为SimpleThreadPool
        //threadCount和threadPriority将setter的形式注入ThreadPoolS实例
        prop.put("org.quartz.threadPool.threadCount", "5");//并发数
        prop.put("org.quartz.threadPool.threadPriority", "5");//优先级
        prop.put("org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer", true);
        //prop.put("org.quartz.jobStore.class", "org.quartz.simpl.RAMJobStore");//默认存储在内存中
        prop.put("org.quartz.jobStore.class", "org.quartz.impl.jdbcjobstore.JobStoreTX");//数据库持久化
        prop.put("org.quartz.jobStore.driverDelegateClass", "org.quartz.impl.jdbcjobstore.StdJDBCDelegate");
//        prop.put("org.quartz.jobStore.isClustered", false);//是否开启集群
//        prop.put("org.quartz.jobStore.clusterCheckinInterval", 20000);//集群检查
        prop.put("org.quartz.jobStore.tablePrefix", "QRTZ_");//表前缀:true
        prop.put("org.quartz.jobStore.dataSource", "finance_google");//数据库
        prop.put("org.quartz.dataSource.mytest.driver", "com.mysql.jdbc.Driver");
        prop.put("org.quartz.dataSource.mytest.URL", "jdbc:mysql://localhost:3306/finance_google?characterEncoding=UTF-8");
        prop.put("org.quartz.dataSource.mytest.user", "root");
        prop.put("org.quartz.dataSource.mytest.password", "123456");
        prop.put("org.quartz.dataSource.mytest.maxConnections", "10");
        return prop;
    }
    @Bean
    public SchedulerFactoryBean schedulerFactoryBean(){
        SchedulerFactoryBean schedulerFactoryBean = new SchedulerFactoryBean();
        schedulerFactoryBean.setOverwriteExistingJobs(true);
        // 延时启动，应用启动1秒后
        schedulerFactoryBean.setStartupDelay(1);
        return schedulerFactoryBean;
    }
}